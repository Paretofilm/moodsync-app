name: Amplify Backend Pipeline

on:
  push:
    branches: [main]
    paths-ignore:
      - '**.md'
      - 'docs/**'

permissions:
  contents: write

concurrency:
  group: amplify-deploy-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      HUSKY: 0
    
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            node_modules
            .next/cache
          key: ${{ runner.os }}-deps-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-deps-
      
      - name: Install dependencies
        run: npm ci --prefer-offline --no-audit
      
      - name: Auto-Fix Linting Issues
        id: lint-fix
        run: |
          echo "ðŸ”§ Attempting to auto-fix lint issues..."
          npm run lint:fix || npx eslint . --fix --ext .js,.jsx,.ts,.tsx || true
          
          if git diff --quiet; then
            echo "âœ… No lint issues found or fixed"
            echo "fixed=false" >> $GITHUB_OUTPUT
          else
            echo "ðŸ”§ Lint issues were auto-fixed"
            echo "fixed=true" >> $GITHUB_OUTPUT
          fi
      
      - name: Auto-Fix Prettier Formatting
        id: prettier-fix
        run: |
          echo "ðŸŽ¨ Attempting to auto-fix formatting..."
          npx prettier --write "**/*.js" "**/*.jsx" "**/*.ts" "**/*.tsx" "**/*.css" "**/*.md" "**/*.json" --ignore-path .gitignore || true
          
          if git diff --quiet; then
            echo "âœ… No formatting issues"
            echo "fixed=false" >> $GITHUB_OUTPUT
          else
            echo "ðŸŽ¨ Formatting was auto-fixed"
            echo "fixed=true" >> $GITHUB_OUTPUT
          fi
      
      - name: Commit Auto-Fixes
        if: steps.lint-fix.outputs.fixed == 'true' || steps.prettier-fix.outputs.fixed == 'true'
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          
          git add -A
          git commit -m "ðŸ¤– Auto-fix: linting and formatting issues [skip ci]"
          git push origin "main"
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-north-1
      
      - name: Deploy backend
        run: |
          export CI=1
          npx ampx pipeline-deploy \
            --branch main \
            --app-id d32q73w0m2w4bq
      
      - name: Generate Amplify outputs
        run: |
          npx ampx generate outputs \
            --branch main \
            --app-id d32q73w0m2w4bq \
            --format json \
            --outputs-version 1.3
      
      - name: Commit outputs
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          
          git add -A amplify_outputs.json
          if ! git diff --cached --quiet; then
            git commit -m "Update amplify_outputs.json [skip ci]"
            git push origin "main"
          fi
      
      - name: Trigger frontend build
        run: |
          # Add webhook URL here - check .amplify-webhook-*.json file
          echo "âœ… Deployment complete!"
